{"ast":null,"code":"var _jsxFileName = \"/Users/sukhmansra/Desktop/vaccine_hunter_fullstack/client/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport GoogleMapReact from 'google-map-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [alert, setAlert] = useState('');\n  const [isAlert, setIsAlert] = useState(false);\n  const [center, setCenter] = useState({});\n  const auth = localStorage.getItem('token');\n  let history = useHistory();\n  useEffect(() => {\n    if (!auth) {\n      history.push('/login');\n    }\n\n    axios.get('/api/auth', {\n      headers: {\n        token: auth\n      }\n    }).then(data => {\n      const response = data;\n      console.log(response);\n    }).catch(err => {\n      console.error(err.response.data.msg);\n      history.push('/login');\n    });\n  }, [auth]);\n  useEffect(() => {\n    return /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyCOhH66mvu-ZomI7nBbb-_U4gZOU3Ow8ik\"\n      },\n      defaultCenter: center,\n      defaultZoom: 11\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }, [center]);\n\n  const getLocation = () => {\n    if (!navigator.geolocation) {\n      setAlert('Geolocation is not supported by your browser');\n    } else {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        setIsAlert(true);\n        setAlert('Unable to retrieve your location');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isAlert && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: getLocation,\n      children: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Dashboard, \"4Oaz/Q/wcfg3gzyVoXQewG0NogM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/sukhmansra/Desktop/vaccine_hunter_fullstack/client/src/components/Dashboard.js"],"names":["useEffect","useState","axios","useHistory","Alert","Button","GoogleMapReact","Dashboard","alert","setAlert","isAlert","setIsAlert","center","setCenter","auth","localStorage","getItem","history","push","get","headers","token","then","data","response","console","log","catch","err","error","msg","key","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,iBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMa,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;AACA,MAAIC,OAAO,GAAGd,UAAU,EAAxB;AACAH,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACc,IAAJ,EAAS;AACLG,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH;;AACDhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,WAAV,EAAsB;AAACC,MAAAA,OAAO,EAAC;AAACC,QAAAA,KAAK,EAAEP;AAAR;AAAT,KAAtB,EACKQ,IADL,CACWC,IAAD,IAAQ;AACV,YAAMC,QAAQ,GAAGD,IAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KAJL,EAIOG,KAJP,CAIcC,GAAD,IAAO;AAChBH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACJ,QAAJ,CAAaD,IAAb,CAAkBO,GAAhC;AACAb,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACH,KAPD;AAQH,GAZQ,EAYP,CAACJ,IAAD,CAZO,CAAT;AAcAd,EAAAA,SAAS,CAAC,MAAI;AACV,wBAAO,QAAC,cAAD;AACH,MAAA,gBAAgB,EAAE;AAAE+B,QAAAA,GAAG,EAAE;AAAP,OADf;AAEH,MAAA,aAAa,EAAEnB,MAFZ;AAGH,MAAA,WAAW,EAAE;AAHV;AAAA;AAAA;AAAA;AAAA,YAAP;AAMH,GAPQ,EAOP,CAACA,MAAD,CAPO,CAAT;;AASA,QAAMoB,WAAW,GAAG,MAAM;AACtB,QAAI,CAACC,SAAS,CAACC,WAAf,EAA4B;AACxBzB,MAAAA,QAAQ,CAAC,8CAAD,CAAR;AACH,KAFD,MAEO;AACHwB,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACnDvB,QAAAA,SAAS,CAAC;AAACwB,UAAAA,GAAG,EAACD,QAAQ,CAACE,MAAT,CAAgBC,QAArB;AAA8BC,UAAAA,GAAG,EAACJ,QAAQ,CAACE,MAAT,CAAgBG;AAAlD,SAAD,CAAT;AACH,OAFD,EAEG,MAAM;AACL9B,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,QAAAA,QAAQ,CAAC,kCAAD,CAAR;AACH,OALD;AAMH;AACJ,GAXD;;AAaA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,OAAO,iBAAG,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA,gBAAyBF;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFf,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEwB,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CAjDD;;GAAMzB,S;UAKYJ,U;;;KALZI,S;AAmDN,eAAeA,SAAf","sourcesContent":["import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\nimport {Alert, Button} from \"react-bootstrap\";\nimport GoogleMapReact from 'google-map-react';\n\nconst Dashboard = () =>{\n    const [alert, setAlert] = useState('');\n    const [isAlert,setIsAlert] = useState(false);\n    const [center, setCenter] = useState({});\n    const auth = localStorage.getItem('token');\n    let history = useHistory();\n    useEffect(()=>{\n        if(!auth){\n            history.push('/login');\n        }\n        axios.get('/api/auth',{headers:{token: auth}})\n            .then((data)=>{\n                const response = data;\n                console.log(response);\n            }).catch((err)=>{\n            console.error(err.response.data.msg)\n            history.push('/login');\n        });\n    },[auth]);\n\n    useEffect(()=>{\n        return(<GoogleMapReact\n            bootstrapURLKeys={{ key: \"AIzaSyCOhH66mvu-ZomI7nBbb-_U4gZOU3Ow8ik\" }}\n            defaultCenter={center}\n            defaultZoom={11}\n        >\n        </GoogleMapReact>)\n    },[center])\n\n    const getLocation = () => {\n        if (!navigator.geolocation) {\n            setAlert('Geolocation is not supported by your browser');\n        } else {\n            navigator.geolocation.getCurrentPosition((position) => {\n                setCenter({lat:position.coords.latitude,lng:position.coords.longitude});\n            }, () => {\n                setIsAlert(true);\n                setAlert('Unable to retrieve your location');\n            });\n        }\n    }\n\n    return(\n        <>\n            <h1>Logged in</h1>\n            {isAlert &&<Alert variant='danger'>{alert}</Alert>}\n            <Button onClick={getLocation}>map</Button>\n        </>\n    )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}